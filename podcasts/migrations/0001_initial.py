# Generated by Django 4.2 on 2024-04-17 09:15

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import podcasts.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('channel_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('thumbnail', models.ImageField(upload_to='')),
                ('view_count', models.IntegerField(default=0)),
                ('subscribe_count', models.IntegerField(default=0)),
                ('session_count', models.IntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('episode_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('session', models.IntegerField(default=1)),
                ('view_count', models.IntegerField(default=0)),
                ('duration', models.DurationField()),
                ('audio_file', models.FileField(upload_to=podcasts.models.get_episode_path)),
                ('thumbnail', models.ImageField(upload_to=podcasts.models.get_episode_path)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='episodes', to='podcasts.channel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_count', models.IntegerField(default=0)),
                ('dislike_count', models.IntegerField(default=0)),
                ('detail', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('about', models.TextField()),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(max_length=32)),
                ('location', models.CharField(max_length=127)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='podcasts.channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='podcasts.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='podcasts.channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribed_channels', to='podcasts.user')),
            ],
        ),
        migrations.CreateModel(
            name='PlayList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=127)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('index', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='play_lists', to='podcasts.user')),
            ],
            options={
                'verbose_name': 'Play List',
                'verbose_name_plural': 'Play Lists',
            },
        ),
        migrations.CreateModel(
            name='Listen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.DurationField()),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listeners', to='podcasts.episode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listens', to='podcasts.user')),
            ],
        ),
        migrations.CreateModel(
            name='ItemInPlayList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_in_playlists', to='podcasts.episode')),
                ('play_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='podcasts.playlist')),
            ],
        ),
        migrations.AddField(
            model_name='episode',
            name='like',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='podcasts.like'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('comment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_reply', models.BooleanField(default=False)),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episode_comments', to='podcasts.episode')),
                ('like', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='podcasts.like')),
                ('reply_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='podcasts.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to='podcasts.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='channel',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='channels', to='podcasts.user'),
        ),
    ]
